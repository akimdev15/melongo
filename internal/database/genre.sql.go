// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: genre.sql

package database

import (
	"context"
)

const getAllGenre = `-- name: GetAllGenre :many
SELECT id, name, code FROM genre
`

func (q *Queries) GetAllGenre(ctx context.Context) ([]Genre, error) {
	rows, err := q.db.QueryContext(ctx, getAllGenre)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Genre
	for rows.Next() {
		var i Genre
		if err := rows.Scan(&i.ID, &i.Name, &i.Code); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getAllGenreCode = `-- name: GetAllGenreCode :many
SELECT code FROM genre
`

func (q *Queries) GetAllGenreCode(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getAllGenreCode)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var code string
		if err := rows.Scan(&code); err != nil {
			return nil, err
		}
		items = append(items, code)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
