// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: playlist.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	PlaylistName string `protobuf:"bytes,2,opt,name=playlistName,proto3" json:"playlistName,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPublic     bool   `protobuf:"varint,4,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	UserID       string `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *CreatePlaylistRequest) Reset() {
	*x = CreatePlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRequest) ProtoMessage() {}

func (x *CreatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlaylistRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreatePlaylistRequest) GetPlaylistName() string {
	if x != nil {
		return x.PlaylistName
	}
	return ""
}

func (x *CreatePlaylistRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePlaylistRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CreatePlaylistRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CreatePlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotifyPlaylistID string `protobuf:"bytes,1,opt,name=spotifyPlaylistID,proto3" json:"spotifyPlaylistID,omitempty"`
	ExternalURL       string `protobuf:"bytes,2,opt,name=externalURL,proto3" json:"externalURL,omitempty"`
	Name              string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreatePlaylistResponse) Reset() {
	*x = CreatePlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistResponse) ProtoMessage() {}

func (x *CreatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*CreatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePlaylistResponse) GetSpotifyPlaylistID() string {
	if x != nil {
		return x.SpotifyPlaylistID
	}
	return ""
}

func (x *CreatePlaylistResponse) GetExternalURL() string {
	if x != nil {
		return x.ExternalURL
	}
	return ""
}

func (x *CreatePlaylistResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateMelonTop100Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	PlaylistID  string `protobuf:"bytes,3,opt,name=playlistID,proto3" json:"playlistID,omitempty"`
	Date        string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CreateMelonTop100Request) Reset() {
	*x = CreateMelonTop100Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMelonTop100Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMelonTop100Request) ProtoMessage() {}

func (x *CreateMelonTop100Request) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMelonTop100Request.ProtoReflect.Descriptor instead.
func (*CreateMelonTop100Request) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMelonTop100Request) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateMelonTop100Request) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateMelonTop100Request) GetPlaylistID() string {
	if x != nil {
		return x.PlaylistID
	}
	return ""
}

func (x *CreateMelonTop100Request) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type CreateMelonTop100Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateMelonTop100Response) Reset() {
	*x = CreateMelonTop100Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMelonTop100Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMelonTop100Response) ProtoMessage() {}

func (x *CreateMelonTop100Response) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMelonTop100Response.ProtoReflect.Descriptor instead.
func (*CreateMelonTop100Response) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMelonTop100Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SaveMelonTop100DBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *SaveMelonTop100DBRequest) Reset() {
	*x = SaveMelonTop100DBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMelonTop100DBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMelonTop100DBRequest) ProtoMessage() {}

func (x *SaveMelonTop100DBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMelonTop100DBRequest.ProtoReflect.Descriptor instead.
func (*SaveMelonTop100DBRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{4}
}

func (x *SaveMelonTop100DBRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type SaveMelonTop100DBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SaveMelonTop100DBResponse) Reset() {
	*x = SaveMelonTop100DBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMelonTop100DBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMelonTop100DBResponse) ProtoMessage() {}

func (x *SaveMelonTop100DBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMelonTop100DBResponse.ProtoReflect.Descriptor instead.
func (*SaveMelonTop100DBResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{5}
}

func (x *SaveMelonTop100DBResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MissedTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank   int32  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Date   string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *MissedTrack) Reset() {
	*x = MissedTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissedTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissedTrack) ProtoMessage() {}

func (x *MissedTrack) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissedTrack.ProtoReflect.Descriptor instead.
func (*MissedTrack) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{6}
}

func (x *MissedTrack) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *MissedTrack) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MissedTrack) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *MissedTrack) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetMissedTracksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Date        string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetMissedTracksRequest) Reset() {
	*x = GetMissedTracksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMissedTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMissedTracksRequest) ProtoMessage() {}

func (x *GetMissedTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMissedTracksRequest.ProtoReflect.Descriptor instead.
func (*GetMissedTracksRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{7}
}

func (x *GetMissedTracksRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetMissedTracksRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetMissedTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissedTracks []*MissedTrack `protobuf:"bytes,1,rep,name=missedTracks,proto3" json:"missedTracks,omitempty"`
}

func (x *GetMissedTrackResponse) Reset() {
	*x = GetMissedTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMissedTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMissedTrackResponse) ProtoMessage() {}

func (x *GetMissedTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMissedTrackResponse.ProtoReflect.Descriptor instead.
func (*GetMissedTrackResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{8}
}

func (x *GetMissedTrackResponse) GetMissedTracks() []*MissedTrack {
	if x != nil {
		return x.MissedTracks
	}
	return nil
}

type ResolvedTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank         int32  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	MissedTitle  string `protobuf:"bytes,2,opt,name=missed_title,json=missedTitle,proto3" json:"missed_title,omitempty"`
	MissedArtist string `protobuf:"bytes,3,opt,name=missed_artist,json=missedArtist,proto3" json:"missed_artist,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Artist       string `protobuf:"bytes,5,opt,name=artist,proto3" json:"artist,omitempty"`
	Date         string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ResolvedTrack) Reset() {
	*x = ResolvedTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolvedTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolvedTrack) ProtoMessage() {}

func (x *ResolvedTrack) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolvedTrack.ProtoReflect.Descriptor instead.
func (*ResolvedTrack) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{9}
}

func (x *ResolvedTrack) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ResolvedTrack) GetMissedTitle() string {
	if x != nil {
		return x.MissedTitle
	}
	return ""
}

func (x *ResolvedTrack) GetMissedArtist() string {
	if x != nil {
		return x.MissedArtist
	}
	return ""
}

func (x *ResolvedTrack) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ResolvedTrack) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *ResolvedTrack) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ResolveMissedTracksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken    string           `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	ResolvedTracks []*ResolvedTrack `protobuf:"bytes,2,rep,name=resolvedTracks,proto3" json:"resolvedTracks,omitempty"`
}

func (x *ResolveMissedTracksRequest) Reset() {
	*x = ResolveMissedTracksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveMissedTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveMissedTracksRequest) ProtoMessage() {}

func (x *ResolveMissedTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveMissedTracksRequest.ProtoReflect.Descriptor instead.
func (*ResolveMissedTracksRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{10}
}

func (x *ResolveMissedTracksRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ResolveMissedTracksRequest) GetResolvedTracks() []*ResolvedTrack {
	if x != nil {
		return x.ResolvedTracks
	}
	return nil
}

type ResolveMissedTracksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ResolveMissedTracksResponse) Reset() {
	*x = ResolveMissedTracksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveMissedTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveMissedTracksResponse) ProtoMessage() {}

func (x *ResolveMissedTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveMissedTracksResponse.ProtoReflect.Descriptor instead.
func (*ResolveMissedTracksResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{11}
}

func (x *ResolveMissedTracksResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetUserPlaylistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *GetUserPlaylistsRequest) Reset() {
	*x = GetUserPlaylistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPlaylistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPlaylistsRequest) ProtoMessage() {}

func (x *GetUserPlaylistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPlaylistsRequest.ProtoReflect.Descriptor instead.
func (*GetUserPlaylistsRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserPlaylistsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next                     string `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Total                    int32  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PlaylistPageURL          string `protobuf:"bytes,3,opt,name=playlistPageURL,proto3" json:"playlistPageURL,omitempty"`
	DetailedPlaylistEndpoint string `protobuf:"bytes,4,opt,name=detailedPlaylistEndpoint,proto3" json:"detailedPlaylistEndpoint,omitempty"`
	Name                     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description              string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	SpotifyPlaylistID        string `protobuf:"bytes,7,opt,name=spotifyPlaylistID,proto3" json:"spotifyPlaylistID,omitempty"`
	ImageUrl                 string `protobuf:"bytes,8,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	TotalTracks              int32  `protobuf:"varint,9,opt,name=totalTracks,proto3" json:"totalTracks,omitempty"`
	TracksEndpoint           string `protobuf:"bytes,10,opt,name=tracksEndpoint,proto3" json:"tracksEndpoint,omitempty"`
}

func (x *Playlist) Reset() {
	*x = Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Playlist) ProtoMessage() {}

func (x *Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Playlist.ProtoReflect.Descriptor instead.
func (*Playlist) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{13}
}

func (x *Playlist) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *Playlist) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Playlist) GetPlaylistPageURL() string {
	if x != nil {
		return x.PlaylistPageURL
	}
	return ""
}

func (x *Playlist) GetDetailedPlaylistEndpoint() string {
	if x != nil {
		return x.DetailedPlaylistEndpoint
	}
	return ""
}

func (x *Playlist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Playlist) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Playlist) GetSpotifyPlaylistID() string {
	if x != nil {
		return x.SpotifyPlaylistID
	}
	return ""
}

func (x *Playlist) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Playlist) GetTotalTracks() int32 {
	if x != nil {
		return x.TotalTracks
	}
	return 0
}

func (x *Playlist) GetTracksEndpoint() string {
	if x != nil {
		return x.TracksEndpoint
	}
	return ""
}

type GetUserPlaylistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playlists   []*Playlist `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	NextPageURL string      `protobuf:"bytes,2,opt,name=nextPageURL,proto3" json:"nextPageURL,omitempty"`
}

func (x *GetUserPlaylistsResponse) Reset() {
	*x = GetUserPlaylistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPlaylistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPlaylistsResponse) ProtoMessage() {}

func (x *GetUserPlaylistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPlaylistsResponse.ProtoReflect.Descriptor instead.
func (*GetUserPlaylistsResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserPlaylistsResponse) GetPlaylists() []*Playlist {
	if x != nil {
		return x.Playlists
	}
	return nil
}

func (x *GetUserPlaylistsResponse) GetNextPageURL() string {
	if x != nil {
		return x.NextPageURL
	}
	return ""
}

type PlaylistTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist     string `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Popularity int32  `protobuf:"varint,3,opt,name=popularity,proto3" json:"popularity,omitempty"`
	Uri        string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *PlaylistTrack) Reset() {
	*x = PlaylistTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistTrack) ProtoMessage() {}

func (x *PlaylistTrack) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistTrack.ProtoReflect.Descriptor instead.
func (*PlaylistTrack) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{15}
}

func (x *PlaylistTrack) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlaylistTrack) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *PlaylistTrack) GetPopularity() int32 {
	if x != nil {
		return x.Popularity
	}
	return 0
}

func (x *PlaylistTrack) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type GetUserPlaylistTracksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken    string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TracksEndpoint string `protobuf:"bytes,2,opt,name=tracksEndpoint,proto3" json:"tracksEndpoint,omitempty"`
}

func (x *GetUserPlaylistTracksRequest) Reset() {
	*x = GetUserPlaylistTracksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPlaylistTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPlaylistTracksRequest) ProtoMessage() {}

func (x *GetUserPlaylistTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPlaylistTracksRequest.ProtoReflect.Descriptor instead.
func (*GetUserPlaylistTracksRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserPlaylistTracksRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetUserPlaylistTracksRequest) GetTracksEndpoint() string {
	if x != nil {
		return x.TracksEndpoint
	}
	return ""
}

type GetUserPlaylistTracksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistTracks []*PlaylistTrack `protobuf:"bytes,1,rep,name=playlistTracks,proto3" json:"playlistTracks,omitempty"`
}

func (x *GetUserPlaylistTracksResponse) Reset() {
	*x = GetUserPlaylistTracksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playlist_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPlaylistTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPlaylistTracksResponse) ProtoMessage() {}

func (x *GetUserPlaylistTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPlaylistTracksResponse.ProtoReflect.Descriptor instead.
func (*GetUserPlaylistTracksResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserPlaylistTracksResponse) GetPlaylistTracks() []*PlaylistTrack {
	if x != nil {
		return x.PlaylistTracks
	}
	return nil
}

var File_playlist_proto protoreflect.FileDescriptor

var file_playlist_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7c, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30,
	0x30, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x33, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x18, 0x53,
	0x61, 0x76, 0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x44, 0x42,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x33, 0x0a, 0x19, 0x53, 0x61, 0x76,
	0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x44, 0x42, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x63,
	0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x0c, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x69, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x7c, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3c, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x22, 0x35, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4d, 0x69,
	0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe4, 0x02, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x18, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x6b,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x22, 0x6f, 0x0a, 0x0d, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x68, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x32, 0xf8, 0x04, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x12, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6c, 0x6f,
	0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6c,
	0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70,
	0x31, 0x30, 0x30, 0x44, 0x42, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x44, 0x42, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x4d, 0x65, 0x6c, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x44, 0x42,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_playlist_proto_rawDescOnce sync.Once
	file_playlist_proto_rawDescData = file_playlist_proto_rawDesc
)

func file_playlist_proto_rawDescGZIP() []byte {
	file_playlist_proto_rawDescOnce.Do(func() {
		file_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_playlist_proto_rawDescData)
	})
	return file_playlist_proto_rawDescData
}

var file_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_playlist_proto_goTypes = []interface{}{
	(*CreatePlaylistRequest)(nil),         // 0: proto.CreatePlaylistRequest
	(*CreatePlaylistResponse)(nil),        // 1: proto.CreatePlaylistResponse
	(*CreateMelonTop100Request)(nil),      // 2: proto.CreateMelonTop100Request
	(*CreateMelonTop100Response)(nil),     // 3: proto.CreateMelonTop100Response
	(*SaveMelonTop100DBRequest)(nil),      // 4: proto.SaveMelonTop100DBRequest
	(*SaveMelonTop100DBResponse)(nil),     // 5: proto.SaveMelonTop100DBResponse
	(*MissedTrack)(nil),                   // 6: proto.MissedTrack
	(*GetMissedTracksRequest)(nil),        // 7: proto.GetMissedTracksRequest
	(*GetMissedTrackResponse)(nil),        // 8: proto.GetMissedTrackResponse
	(*ResolvedTrack)(nil),                 // 9: proto.ResolvedTrack
	(*ResolveMissedTracksRequest)(nil),    // 10: proto.ResolveMissedTracksRequest
	(*ResolveMissedTracksResponse)(nil),   // 11: proto.ResolveMissedTracksResponse
	(*GetUserPlaylistsRequest)(nil),       // 12: proto.GetUserPlaylistsRequest
	(*Playlist)(nil),                      // 13: proto.Playlist
	(*GetUserPlaylistsResponse)(nil),      // 14: proto.GetUserPlaylistsResponse
	(*PlaylistTrack)(nil),                 // 15: proto.PlaylistTrack
	(*GetUserPlaylistTracksRequest)(nil),  // 16: proto.GetUserPlaylistTracksRequest
	(*GetUserPlaylistTracksResponse)(nil), // 17: proto.GetUserPlaylistTracksResponse
}
var file_playlist_proto_depIdxs = []int32{
	6,  // 0: proto.GetMissedTrackResponse.missedTracks:type_name -> proto.MissedTrack
	9,  // 1: proto.ResolveMissedTracksRequest.resolvedTracks:type_name -> proto.ResolvedTrack
	13, // 2: proto.GetUserPlaylistsResponse.playlists:type_name -> proto.Playlist
	15, // 3: proto.GetUserPlaylistTracksResponse.playlistTracks:type_name -> proto.PlaylistTrack
	0,  // 4: proto.PlaylistService.CreatePlaylist:input_type -> proto.CreatePlaylistRequest
	2,  // 5: proto.PlaylistService.CreateMelonTop100:input_type -> proto.CreateMelonTop100Request
	4,  // 6: proto.PlaylistService.SaveMelonTop100DB:input_type -> proto.SaveMelonTop100DBRequest
	7,  // 7: proto.PlaylistService.GetMissedTracks:input_type -> proto.GetMissedTracksRequest
	10, // 8: proto.PlaylistService.ResolveMissedTracks:input_type -> proto.ResolveMissedTracksRequest
	12, // 9: proto.PlaylistService.GetUserPlaylists:input_type -> proto.GetUserPlaylistsRequest
	16, // 10: proto.PlaylistService.GetUserPlaylistTracks:input_type -> proto.GetUserPlaylistTracksRequest
	1,  // 11: proto.PlaylistService.CreatePlaylist:output_type -> proto.CreatePlaylistResponse
	3,  // 12: proto.PlaylistService.CreateMelonTop100:output_type -> proto.CreateMelonTop100Response
	5,  // 13: proto.PlaylistService.SaveMelonTop100DB:output_type -> proto.SaveMelonTop100DBResponse
	8,  // 14: proto.PlaylistService.GetMissedTracks:output_type -> proto.GetMissedTrackResponse
	11, // 15: proto.PlaylistService.ResolveMissedTracks:output_type -> proto.ResolveMissedTracksResponse
	14, // 16: proto.PlaylistService.GetUserPlaylists:output_type -> proto.GetUserPlaylistsResponse
	17, // 17: proto.PlaylistService.GetUserPlaylistTracks:output_type -> proto.GetUserPlaylistTracksResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_playlist_proto_init() }
func file_playlist_proto_init() {
	if File_playlist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_playlist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMelonTop100Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMelonTop100Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMelonTop100DBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMelonTop100DBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissedTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMissedTracksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMissedTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolvedTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveMissedTracksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveMissedTracksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPlaylistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPlaylistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPlaylistTracksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playlist_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPlaylistTracksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_playlist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_playlist_proto_goTypes,
		DependencyIndexes: file_playlist_proto_depIdxs,
		MessageInfos:      file_playlist_proto_msgTypes,
	}.Build()
	File_playlist_proto = out.File
	file_playlist_proto_rawDesc = nil
	file_playlist_proto_goTypes = nil
	file_playlist_proto_depIdxs = nil
}
